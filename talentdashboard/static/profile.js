;(function() {
"use strict";

angular
    .module('profile', ['ngRoute', 'ui-notification']);

angular
    .module('profile')
    .controller('ProfileController', ProfileController);

function ProfileController(Employee, analytics, $location, $rootScope, $routeParams, $scope) {
    /* Since this page can be the root for some users let's make sure we capture the correct page */
    var location_url = $location.url().indexOf('/profile') < 0 ? '/profile' : $location.url();
    analytics.trackPage($scope, $location.absUrl(), location_url);
    var vm = this;
    vm.employee = null;
    vm.moreInfoCollapse = true;
    vm.filterCommentsByType = filterCommentsByType;
    vm.filterCommentsByView = filterCommentsByView;
    vm.filter = {type: null, view: 'me'};

    activate();

    function activate() {
        getEmployee();
    };

    function getEmployee() {
        Employee.get(
            {id: $routeParams.id},
            function (data) {
                vm.employee = data;
                vm.employee.hire_date = $rootScope.parseDate(vm.employee.hire_date);
            }
        );
    }

    function filterCommentsByType(type) {
        vm.filter.type = type;
        filterComments();
    }

    function filterCommentsByView(view) {
        vm.filter.view = view;
        filterComments();
    }

    function filterComments() {
        $scope.$broadcast('filterComments', vm.filter);
    }




}
ProfileController.$inject = ["Employee", "analytics", "$location", "$rootScope", "$routeParams", "$scope"];
}());

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2ZpbGUubW9kdWxlLmpzIiwicHJvZmlsZS5jb250cm9sbGVyLmpzIiwicHJvZmlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFBLENBQUEsV0FBQTtBQUNBOztBQ0RBO0tBQ0EsT0FBQSxXQUFBLENBQUEsV0FBQTs7QUFFQTtLQUNBLE9BQUE7S0FDQSxXQUFBLHFCQUFBOztBQUVBLFNBQUEsa0JBQUEsVUFBQSxXQUFBLFdBQUEsWUFBQSxjQUFBLFFBQUE7O0lBRUEsSUFBQSxlQUFBLFVBQUEsTUFBQSxRQUFBLGNBQUEsSUFBQSxhQUFBLFVBQUE7SUFDQSxVQUFBLFVBQUEsUUFBQSxVQUFBLFVBQUE7SUFDQSxJQUFBLEtBQUE7SUFDQSxHQUFBLFdBQUE7SUFDQSxHQUFBLG1CQUFBO0lBQ0EsR0FBQSx1QkFBQTtJQUNBLEdBQUEsdUJBQUE7SUFDQSxHQUFBLFNBQUEsQ0FBQSxNQUFBLE1BQUEsTUFBQTs7SUFFQTs7SUFFQSxTQUFBLFdBQUE7UUFDQTtLQUNBOztJQUVBLFNBQUEsY0FBQTtRQUNBLFNBQUE7WUFDQSxDQUFBLElBQUEsYUFBQTtZQUNBLFVBQUEsTUFBQTtnQkFDQSxHQUFBLFdBQUE7Z0JBQ0EsR0FBQSxTQUFBLFlBQUEsV0FBQSxVQUFBLEdBQUEsU0FBQTs7Ozs7SUFLQSxTQUFBLHFCQUFBLE1BQUE7UUFDQSxHQUFBLE9BQUEsT0FBQTtRQUNBOzs7SUFHQSxTQUFBLHFCQUFBLE1BQUE7UUFDQSxHQUFBLE9BQUEsT0FBQTtRQUNBOzs7SUFHQSxTQUFBLGlCQUFBO1FBQ0EsT0FBQSxXQUFBLGtCQUFBLEdBQUE7Ozs7Ozs7OztBQ1dBIiwiZmlsZSI6InByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyXG4gICAgLm1vZHVsZSgncHJvZmlsZScsIFsnbmdSb3V0ZScsICd1aS1ub3RpZmljYXRpb24nXSk7XG4iLCJhbmd1bGFyXG4gICAgLm1vZHVsZSgncHJvZmlsZScpXG4gICAgLmNvbnRyb2xsZXIoJ1Byb2ZpbGVDb250cm9sbGVyJywgUHJvZmlsZUNvbnRyb2xsZXIpO1xuXG5mdW5jdGlvbiBQcm9maWxlQ29udHJvbGxlcihFbXBsb3llZSwgYW5hbHl0aWNzLCAkbG9jYXRpb24sICRyb290U2NvcGUsICRyb3V0ZVBhcmFtcywgJHNjb3BlKSB7XG4gICAgLyogU2luY2UgdGhpcyBwYWdlIGNhbiBiZSB0aGUgcm9vdCBmb3Igc29tZSB1c2VycyBsZXQncyBtYWtlIHN1cmUgd2UgY2FwdHVyZSB0aGUgY29ycmVjdCBwYWdlICovXG4gICAgdmFyIGxvY2F0aW9uX3VybCA9ICRsb2NhdGlvbi51cmwoKS5pbmRleE9mKCcvcHJvZmlsZScpIDwgMCA/ICcvcHJvZmlsZScgOiAkbG9jYXRpb24udXJsKCk7XG4gICAgYW5hbHl0aWNzLnRyYWNrUGFnZSgkc2NvcGUsICRsb2NhdGlvbi5hYnNVcmwoKSwgbG9jYXRpb25fdXJsKTtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIHZtLmVtcGxveWVlID0gbnVsbDtcbiAgICB2bS5tb3JlSW5mb0NvbGxhcHNlID0gdHJ1ZTtcbiAgICB2bS5maWx0ZXJDb21tZW50c0J5VHlwZSA9IGZpbHRlckNvbW1lbnRzQnlUeXBlO1xuICAgIHZtLmZpbHRlckNvbW1lbnRzQnlWaWV3ID0gZmlsdGVyQ29tbWVudHNCeVZpZXc7XG4gICAgdm0uZmlsdGVyID0ge3R5cGU6IG51bGwsIHZpZXc6ICdtZSd9O1xuXG4gICAgYWN0aXZhdGUoKTtcblxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICAgICAgICBnZXRFbXBsb3llZSgpO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBnZXRFbXBsb3llZSgpIHtcbiAgICAgICAgRW1wbG95ZWUuZ2V0KFxuICAgICAgICAgICAge2lkOiAkcm91dGVQYXJhbXMuaWR9LFxuICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICB2bS5lbXBsb3llZSA9IGRhdGE7XG4gICAgICAgICAgICAgICAgdm0uZW1wbG95ZWUuaGlyZV9kYXRlID0gJHJvb3RTY29wZS5wYXJzZURhdGUodm0uZW1wbG95ZWUuaGlyZV9kYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmaWx0ZXJDb21tZW50c0J5VHlwZSh0eXBlKSB7XG4gICAgICAgIHZtLmZpbHRlci50eXBlID0gdHlwZTtcbiAgICAgICAgZmlsdGVyQ29tbWVudHMoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmaWx0ZXJDb21tZW50c0J5Vmlldyh2aWV3KSB7XG4gICAgICAgIHZtLmZpbHRlci52aWV3ID0gdmlldztcbiAgICAgICAgZmlsdGVyQ29tbWVudHMoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmaWx0ZXJDb21tZW50cygpIHtcbiAgICAgICAgJHNjb3BlLiRicm9hZGNhc3QoJ2ZpbHRlckNvbW1lbnRzJywgdm0uZmlsdGVyKTtcbiAgICB9XG5cblxuXG5cbn0iLCI7KGZ1bmN0aW9uKCkge1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdwcm9maWxlJywgWyduZ1JvdXRlJywgJ3VpLW5vdGlmaWNhdGlvbiddKTtcblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ3Byb2ZpbGUnKVxuICAgIC5jb250cm9sbGVyKCdQcm9maWxlQ29udHJvbGxlcicsIFByb2ZpbGVDb250cm9sbGVyKTtcblxuZnVuY3Rpb24gUHJvZmlsZUNvbnRyb2xsZXIoRW1wbG95ZWUsIGFuYWx5dGljcywgJGxvY2F0aW9uLCAkcm9vdFNjb3BlLCAkcm91dGVQYXJhbXMsICRzY29wZSkge1xuICAgIC8qIFNpbmNlIHRoaXMgcGFnZSBjYW4gYmUgdGhlIHJvb3QgZm9yIHNvbWUgdXNlcnMgbGV0J3MgbWFrZSBzdXJlIHdlIGNhcHR1cmUgdGhlIGNvcnJlY3QgcGFnZSAqL1xuICAgIHZhciBsb2NhdGlvbl91cmwgPSAkbG9jYXRpb24udXJsKCkuaW5kZXhPZignL3Byb2ZpbGUnKSA8IDAgPyAnL3Byb2ZpbGUnIDogJGxvY2F0aW9uLnVybCgpO1xuICAgIGFuYWx5dGljcy50cmFja1BhZ2UoJHNjb3BlLCAkbG9jYXRpb24uYWJzVXJsKCksIGxvY2F0aW9uX3VybCk7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICB2bS5lbXBsb3llZSA9IG51bGw7XG4gICAgdm0ubW9yZUluZm9Db2xsYXBzZSA9IHRydWU7XG4gICAgdm0uZmlsdGVyQ29tbWVudHNCeVR5cGUgPSBmaWx0ZXJDb21tZW50c0J5VHlwZTtcbiAgICB2bS5maWx0ZXJDb21tZW50c0J5VmlldyA9IGZpbHRlckNvbW1lbnRzQnlWaWV3O1xuICAgIHZtLmZpbHRlciA9IHt0eXBlOiBudWxsLCB2aWV3OiAnbWUnfTtcblxuICAgIGFjdGl2YXRlKCk7XG5cbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgICAgZ2V0RW1wbG95ZWUoKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gZ2V0RW1wbG95ZWUoKSB7XG4gICAgICAgIEVtcGxveWVlLmdldChcbiAgICAgICAgICAgIHtpZDogJHJvdXRlUGFyYW1zLmlkfSxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgdm0uZW1wbG95ZWUgPSBkYXRhO1xuICAgICAgICAgICAgICAgIHZtLmVtcGxveWVlLmhpcmVfZGF0ZSA9ICRyb290U2NvcGUucGFyc2VEYXRlKHZtLmVtcGxveWVlLmhpcmVfZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZmlsdGVyQ29tbWVudHNCeVR5cGUodHlwZSkge1xuICAgICAgICB2bS5maWx0ZXIudHlwZSA9IHR5cGU7XG4gICAgICAgIGZpbHRlckNvbW1lbnRzKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZmlsdGVyQ29tbWVudHNCeVZpZXcodmlldykge1xuICAgICAgICB2bS5maWx0ZXIudmlldyA9IHZpZXc7XG4gICAgICAgIGZpbHRlckNvbW1lbnRzKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZmlsdGVyQ29tbWVudHMoKSB7XG4gICAgICAgICRzY29wZS4kYnJvYWRjYXN0KCdmaWx0ZXJDb21tZW50cycsIHZtLmZpbHRlcik7XG4gICAgfVxuXG5cblxuXG59XG59KCkpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
